events {}

http {
    upstream auth-service {
        server auth-service:5003;
    }

    upstream book-service {
        server book-service:5002;
    }

    upstream user-service {
        server user-service:5004;
    }

    upstream admin-service {
        server admin-service:5001;
    }

    server {
        listen 80;
        

        #Health Check Route for API Gateway
        location /health {
            return 200 "Nginx is healthy\n";
        }

        location /api/auth/health {
            proxy_pass http://auth-service/health;
        }

        location /api/admin/health {
            proxy_pass http://admin-service/health;
        }

        location /api/books/health {
            proxy_pass http://book-service/health;
        }

        location /api/users/health {
            proxy_pass http://user-service/health;
        }

        location / {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /api/auth {
            proxy_pass http://auth-service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /api/books {
            proxy_pass http://book-service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            add_header 'Access-Control-Allow-Origin' 'http://localhost:3000' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;

            if ($request_method = 'OPTIONS') {
             return 204;
            }
        }

        location /api/users {
            proxy_pass http://user-service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /api/admin {
            proxy_pass http://admin-service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }
}
