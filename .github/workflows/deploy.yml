name: Deploy Library Management System

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Debug DOCKER_USERNAME
        run: |
          DOCKER_USER=$(echo "${{ secrets.DOCKER_USERNAME }}" | tr -d '[:space:]')
          echo "DOCKER_USERNAME='$DOCKER_USER'"


      - name: Build and Push Admin Service
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/admin-service:latest ./adminService
          docker push ${{ secrets.DOCKER_USERNAME }}/admin-service:latest

      - name: Build and Push Auth Service
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/auth-service:latest ./authService
          docker push ${{ secrets.DOCKER_USERNAME }}/auth-service:latest

      - name: Build and Push User Service
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/user-service:latest ./userService
          docker push ${{ secrets.DOCKER_USERNAME }}/user-service:latest

      - name: Build and Push Book Service
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/book-service:latest ./bookService
          docker push ${{ secrets.DOCKER_USERNAME }}/book-service:latest

      - name: Build and Push Frontend Service
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend:latest ./frontend
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend:latest

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version
      
      - name: Debug Secret Output
        run: |
          echo "DOCKER_USERNAME='${{ secrets.DOCKER_USERNAME }}'"

      - name: Deploy with Docker Compose
        env:
         DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
         DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          printf "DOCKER_USERNAME=%s\n" "$DOCKER_USERNAME" > .env
          printf "DOCKER_PASSWORD=%s\n" "$DOCKER_PASSWORD" >> .env
          cat .env  
          docker compose -f docker-compose.yml up -d --remove-orphans