services:
  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    ports:
      - "5005:80"  
    volumes:
      - ./apiGateway/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - auth-service
      - user-service
      - book-service
      - admin-service
      - frontend  
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 5 
      start_period: 30s

  auth-service:
    build: ./authService
    ports:
      - "5003:5003"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5003/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  user-service:
    build: ./userService
    ports:
      - "5004:5004"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5004/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  book-service:
    build: ./bookService
    ports:
      - "5002:5002"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5002/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  admin-service:
    build: ./adminService
    ports:
      - "5001:5001"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build: ./frontend  
    container_name: frontend
    ports:
      - "3000:3000"  
    stdin_open: true  
    tty: true 
    volumes:
      - ./frontend:/app  
      - /app/node_modules  
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
